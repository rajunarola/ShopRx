@{
    ViewData["Title"] = "Measurement";
}

<main class="app-content">
    <div class="app-title admin_breadcrumb">
        <ul class="app-breadcrumb breadcrumb">
            <li class="breadcrumb-item"><i class="fa fa-home fa-lg"></i></li>
            <li class="breadcrumb-item"><a href="\Admin">Home</a></li>
            <li class="breadcrumb-item"><a href="javascript:;">Master</a></li>
            <li class="breadcrumb-item"><a href="javascript:;">Manage Measurement</a></li>
        </ul>
    </div>
    <div class="row pharmacies_form admin_tabel">
        <div class="col-12">
            <div class="database_title d-flex">
                <h3 class="d-flex w-100 align-items-center">Manage Measurement</h3>
                <div class="accordian-block border-0 w-100">
                    <div class="accordian-para acc-show purches_order p-0">
                        <form>
                            <div class="form-row mt-0 d-flex justify-content-end">
                                <div class="form-group m-0 d-flex w-50">
                                    @Html.DropDownList("measurementTypeId", ViewBag.MeasurementList as IEnumerable<SelectListItem>, "Select Measurement", new { @class = "form-control", required = "Select Measurement" })
                                    <button type="button" onclick="AddEditMeasurement(0);" class="btn btn-outline-primary con_btn database_btn back_btn d-inline-block float-right active m-0 ml-2"><i class="fa fa-plus" aria-hidden="true"></i> Add Measurement</button>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-12">
            <!-- Tab panes -->
            <div class="tab-content pt-0">
                <div class="tile-body">
                    <div class="dataTables_wrapper no-footer">
                        <table class="table table-hover table-bordered dataTable no-footer table_bordered_sec" id="dtMeasurement" role="grid" aria-describedby="sampleTable_info">
                            <thead>
                                <tr role="row" class="title_datatable">
                                    <th>Action</th>
                                    <th>Status</th>
                                    <th>Measurement Type</th>
                                    <th>Measurement Unit</th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</main>
@section Scripts{
    <script type="text/javascript">
        $(document).ready(function() {
            bindMeasurementList(0);
        });
        $("#measurementTypeId").change(function () {
            var measurementTypeId = $(this).val();
            measurementTypeId = isNaN(measurementTypeId) ? 0 : measurementTypeId;
            bindMeasurementList(measurementTypeId);
        });

        function bindMeasurementList(measurementTypeId) {
            if ($.fn.DataTable.isDataTable("#dtMeasurement")) {
                $('#dtMeasurement').DataTable().destroy();
            }
            var table = $('#dtMeasurement')
                .DataTable({
                    "sAjaxSource": `/Admin/Master/GetMeasurementList?measurementTypeId=${measurementTypeId}`,
                    "order": [[2, ""]],
                    "columns": [
                        {
                            "data": "id",
                            "autoWidth": false,
                            "searchable": false,
                            "orderable": false,
                            "render": function(data) {
                                const content = `<a href="javascript:;" ${dataParams("Edit", "edit", data)} class="dropdown-item action"><i class="fa fa-pencil" aria-hidden="true"></i> Edit</a>
                                                 <a href="javascript:;" ${dataParams("Delete", "delete", data)} class="dropdown-item action"><i class="fa fa-trash" aria-hidden="true"></i> Delete</a>`;
                                return dataTableAction(content);
                            }
                        },
                        {
                            "data": "isActive",
                            "searchable": false,
                            "orderable": false,
                            "className": "admin_toggle text-center",
                            "render": function(data, type, row) {
                                return statusToggle(row.id, data);
                            }
                        },
                        {
                            "data": "measurementTypeName",
                            "autoWidth": false,
                            "searchable": true,
                            "orderable": true
                        },
                        {
                            "data": "measurementUnit",
                            "autoWidth": false,
                            "searchable": true,
                            "orderable": true
                        }
                    ]
                });
        };

        $('#dtMeasurement').on("click",
            ".action",
            function(e) {
                const flag = $(e.currentTarget).data("flag");
                const id = $(e.currentTarget).data("id");
                switch (flag) {
                case "edit":
                    AddEditMeasurement(id);
                    break;
                case "delete":
                    DeleteMeasurement(id);
                    break;
                default:
                    break;
                }
            });

        $('#dtMeasurement').on("change",
            ".admin_toggle",
            function(e) {
                const current = $(e.currentTarget).find("input");
                const id = $(current).data("id");
                $.ajax({
                    url: "@Url.Action("ManageMeasurementStatus", "Master")",
                    data: { id: id },
                    type: "POST",
                    success: function(response) {
                        RxFair.HandleResponse(response);
                    },
                    error: function(data) {
                    }
                });
            });

        function AddEditMeasurement(id) {
            $("#modalContent").load(`/Admin/Master/AddEditMeasurement/${id}`,
                function() {
                    $("#divModal").modal('show');
                });
        }

        function DeleteMeasurement(id) {
            RxFair.Confirm("Delete Measurement Detail",
                RxFair.typeModel.Warning,
                "Are you sure?",
                RxFair.typeModel.Danger,
                "Yes, delete it!",
                function() {
                    $.ajax({
                        url: "@Url.Action("RemoveMeasurement", "Master")",
                        data: { id: id },
                        type: "POST",
                        success: function(response) {
                            RxFair.HandleResponse(response);
                            if (response.status === 1) {
                                refreshDatatable("#dtMeasurement", id);
                            }
                        },
                        error: function(data) {
                        }
                    });
                },
                function() { });
        }

    </script>
}