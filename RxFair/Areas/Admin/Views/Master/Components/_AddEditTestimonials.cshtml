@model RxFair.Dto.Dtos.TestimonialDto
@{
    Layout = null;
}

<div class="modal-header">
    <h5 class="modal-title" id="exampleModalLabel">@(Model.Id == 0 ? "Add" : "Edit") Testimonial</h5>
    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
        <span aria-hidden="true">&times;</span>
    </button>
</div>
<div class="modal-body">
    <div class="accordian-block border-0">
        <div class="accordian-para acc-show p-0">
            <form id="frmTestimonial" asp-action="AddEditTestimonials" method="post">
                @Html.AntiForgeryToken()
                <input type="hidden" asp-for="Id" name="Id" />
                <div class="form-row mt-0">
                    <div class="form-group col-md-12">
                        <label for="Name">Name *</label>
                        <input type="text" asp-for="Name" id="Name" name="Name" class="form-control" data-parsley-required data-parsley-trigger="change" data-parsley-pattern="^[a-zA-Z ]+$">
                    </div>
                    <div class="form-group col-md-12">
                        <label for="Answer">Feedback *</label>
                        <textarea asp-for="Feedback" id="Feedback" name="Feedback" class="form-control" rows="4" data-parsley-required data-parsley-trigger="change"></textarea>
                    </div>
                    <div class="form-group col-md-12 mb-0">
                        <label for="TestimonialFile"></label>
                        <label for="TestimonialFile">
                            <span class="btn btn-outline-secondary upload_btn mr-2">File Upload</span><span style="color:#dc3545;font-size:14px">Files type jpg,jpeg,png only(5MB)</span>
                            <input style="display: none;" type="file" class="form-control-file" id="TestimonialFile" name="TestimonialFile" data-parsley-max-file-size="5000" @(Model.Id == 0 ? "required" : "")>
                        </label>
                        <img src="@Model.Image" id="previewImage" alt="" class="img-fluid popup_img-test d-block mt-2 img">
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>
<div class="modal-footer">
    <button type="button" id="btnSave" class="btn btn-outline-primary con_btn active">Save</button>
    <button type="button" class="btn btn-outline-primary con_btn mr-auto" data-dismiss="modal">Close</button>
</div>

<script type="text/javascript">
    $("#TestimonialFile").change(function () {
        
        const files = $("#TestimonialFile").get(0).files;
        if (parseInt($("#Id").val()) === 0 && files.length <= 0) {
            RxFair.Error("Error", "please select file");
            return false;
        } else {
            const fileName = $('#TestimonialFile').val();
            var getExt = fileName.split('.');
            getExt = getExt.reverse();
            if ($.inArray(getExt[0].toLowerCase(), RxFair.Filetypes) === -1) {
                const fileTypes = RxFair.Filetypes.join();
                RxFair.Error("Error", "The filetype you are attempting to upload is not allowed. Allowed Types : " + fileTypes);
                return false;
            } else {
                //on change
                if (files[0].size <= 5000 * 1024) {
                    readImageURL(this, "#previewImage");

                } else {
                    RxFair.Error("Error", "This file should not be larger than 5MB");
                }
            }
        }
    });

    window.Parsley.addValidator('maxFileSize', {

        validateString: function (_value, maxSize, parsleyInstance) {
            if (!window.FormData) {
                alert('You are making all developpers in the world cringe. Upgrade your browser!');
                return true;
            }
            var files = parsleyInstance.$element[0].files;
            //tva
            var getExt = files[0].name.split('.').reverse();
            if ($.inArray(getExt[0].toLowerCase(), RxFair.Filetypes) === -1) {

                const fileTypes = RxFair.Filetypes.join();
                RxFair.Error("Error", "The filetype you are attempting to upload is not allowed. Allowed Types : " + fileTypes);

                return false;
            } else {
                if (files[0].size <= 5000 * 1024) {
                    readImageURL(this, "#previewImage");
                }
                else {
                    RxFair.Error("Error", "This file should not be larger than 5MB");
                }
                // readImageURL(this, "#previewImage");
            }
            return files.length != 1 || files[0].size <= maxSize * 1024;
        },
        requirementType: 'integer',
        //messages: {
        //    en: '<span style="color:#dc3545">This file should not be larger than %s Kb</span>',
        //}
    });

    $("#btnSave").click(function () {

        $('#frmTestimonial').parsley().validate();
        const files = $("#TestimonialFile").get(0).files;
        var flag = false;

        if ($("#frmTestimonial").parsley().isValid()) {
            if (parseInt($("#Id").val()) === 0 && files.length <= 0) {
                RxFair.Error("Error", "please select file");
                flag = false;
            } else {
                if (files.length !== 0) {
                    const fileName = $('#TestimonialFile').val();
                    var getExt = fileName.split('.');
                    getExt = getExt.reverse();
                    if ($.inArray(getExt[0].toLowerCase(), RxFair.Filetypes) === -1) {
                        RxFair.Error("Error", "The filetype you are attempting to upload is not allowed.");
                        flag = false;
                    }
                    else {
                        flag = true;
                    }
                } else {
                    flag = true;
                }
            }
            flag = true;
            if (flag) {
                if (window.FormData !== undefined) {
                    // Create FormData object
                    // Adding one more key to FormData object
                    var fileData = serializeformToFormData("#frmTestimonial");
                    // Looping over all files and add it to FormData object
                    fileData.append("TestimonialFile", files[0]);
                    $.ajax({
                        url: "/Admin/Master/AddEditTestimonials",
                        type: "POST",
                        contentType: false, // Not to set any content header
                        processData: false, // Not to process data
                        data: fileData,
                        success: function (response) {
                            RxFair.HandleResponse(response);
                            if (response.status) {
                                closeModal();
                                window.bindTestimonialList();
                            }
                        },
                        error: function (response) {
                            RxFair.HandleResponse(response);
                        }
                    });
                } else {
                    RxFair.Warning("Form Data", "FormData is not supported.");
                }
            }
        }
    });

</script>