@model RxFair.Dto.Dtos.DocumentView
@{
    Layout = null;
}

<div class="modal-header">
    <h5 class="modal-title" id="exampleModalLabel">@(Model.Id == 0 ? "Add" : "Edit") Document</h5>
    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
        <span aria-hidden="true">&times;</span>
    </button>
</div>
<div class="modal-body">
    <div class="accordian-block border-0">
        <div class="accordian-para acc-show p-0">
            <form id="frmDocument" asp-action="AddEditDocument" method="post">
                @Html.AntiForgeryToken()
                <input type="hidden" asp-for="Id" name="Id" />
                <div class="form-row mt-0">
                    <div class="form-group col-md-12">
                        <label>Document Type</label>
                        @Html.DropDownListFor(m => m.DocumentType, ViewBag.DocumentTypeMaster as IEnumerable<SelectListItem>, "Select Document Type", new { @class = "form-control", required = "Select Document Type" })
                    </div>
                    <div class="form-group col-md-12">
                        <label for="Name">Document Name *</label>
                        <input type="text" asp-for="DocumentName" id="DocumentName" name="DocumentName" class="form-control" data-parsley-required data-parsley-trigger="change" data-parsley-pattern="^[a-zA-Z0-9_ ]+$">
                    </div>
                    <div class="form-group col-md-12 mb-0">
                        <label for="Document"></label>
                        <label for="Document">
                            <span class="btn btn-outline-secondary upload_btn mr-2">File Upload</span>
                            <input asp-for="Document" style="display: none;" type="file" class="form-control-file" />
                            <label class="col p-0"><b>Allowed Types : ".doc", ".docx", ".htm", ".html", ".odt", ".pdf", ".xls", ".xlsx", ".ods", ".ppt", ".pptx", ".txt". </b></label>
                        </label>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>
<div class="modal-footer">
    <button type="button" id="btnSave" class="btn btn-outline-primary con_btn active">Save</button>
    <button type="button" class="btn btn-outline-primary con_btn mr-auto" data-dismiss="modal">Close</button>
</div>

<script type="text/javascript">

    $("#Document").change(function () {
        const files = $("#Document").get(0).files;
        if (parseInt($("#Id").val()) === 0 && files.length <= 0) {
            RxFair.Error("Error", "please select file");
            return false;
        } else {
            const fileName = $('#Document').val();
            let getExt = fileName.split('.');
            getExt = getExt.reverse();
            if ($.inArray(getExt[0].toLowerCase(), RxFair.DocumentTypes) === -1) {
                const fileTypes = RxFair.DocumentTypes.join();
                RxFair.Error("Error", "Only " + fileTypes + " types of files are allowed.");
                return false;
            }
        }
    });

    $("#btnSave").click(function () {
        $('#frmDocument').parsley().validate();
    
        const files = $("#Document").get(0).files;
        var flag = false;

        if ($("#frmDocument").parsley().isValid()) {
            if (parseInt($("#Id").val()) === 0 && files.length <= 0) {
                RxFair.Error("Error", "please select file");
                flag = false;
            } else {
                if (files.length !== 0) {
                    const fileName = $('#Document').val();
                    let getExt = fileName.split('.');
                    getExt = getExt.reverse();
                    if ($.inArray(getExt[0].toLowerCase(), RxFair.DocumentTypes) === -1) {
                        const fileTypes = RxFair.DocumentTypes.join();
                        RxFair.Error("Error", "Only " + fileTypes + " types of files are allowed.");
                        flag = false;
                    }
                    else {
                        flag = true;
                    }
                } else {
                    flag = true;
                }
            }
            if (flag) {
                if (window.FormData !== undefined) {
                   
                    // Create FormData object
                    // Adding one more key to FormData object
                    const fileData = serializeformToFormData("#frmDocument");
                    // Looping over all files and add it to FormData object
                    fileData.append("Document", files[0]);
                    $.ajax({
                        url: "/Admin/Master/AddEditDocument",
                        type: "POST",
                        contentType: false, // Not to set any content header
                        processData: false, // Not to process data
                        data: fileData,
                        success: function (response) {
                            RxFair.HandleResponse(response);
                            if (response.status) {
                                closeModal();
                                window.bindDocumentList();
                            }
                        },
                        error: function (response) {
                            RxFair.HandleResponse(response);
                        }
                    });
                } else {
                    RxFair.Warning("Form Data", "FormData is not supported.");
                }
            }
        }
    });

</script>